# 工作流名称
name: Build and Deploy Slides to Slides Repo

on:
  # 当有代码推送到 main 分支时触发
  push:
    branches:
      - main
  # 允许你从 Actions 标签页手动运行这个工作流
  workflow_dispatch:

jobs:
  build-and-deploy:
    # 运行在最新的 Ubuntu 系统上
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出你的源码仓库
      - name: Checkout repository
        uses: actions/checkout@v4

    #   # 步骤 2: 设置 Node.js 环境
    #   - name: Setup Node.js
    #     uses: actions/setup-node@v4
    #     with:
    #       node-version: '18'

    #   # 步骤 3: 安装 reveal-md
    #   - name: Install reveal-md
    #     run: npm install -g reveal-md

    #   # 步骤 4: 生成静态站点
    #   - name: Build slides
    #     run: |
    #       reveal-md slides.md --static ./site
    #       # 将图片资源复制到 _assets 目录下，保持与 CSS 的相对路径正确
    #       cp -R ./assets ./site/_assets/

      # 步骤 5: 部署到目标仓库
      - name: Deploy slides folder to slides repo
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          # 确保你在仓库的 Settings -> Secrets 中配置了名为 API2 的 Personal Access Token
          API_TOKEN_GITHUB: ${{ secrets.API2 }}
        with:
          source_file: './site/.' # 源目录现在由上一步正确生成了
          destination_repo: 'Leo11-strive/slides'
          destination_branch: 'main'
          destination_folder: 'law_and_human_rights' # 将文件部署到目标仓库的这个子文件夹中
          user_email: 'leobestli61@gmail.com'
          user_name: 'Leo11-strive'
          commit_message: 'Deploy: Update law and human rights slides' # 添加一个有意义的提交信息

      # 步骤 6: 确保 GitHub Pages 不使用 Jekyll（否则以 _ 开头的目录会被忽略）
      - name: Deploy .nojekyll to repo root
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API2 }}
        with:
          source_file: './.nojekyll'
          destination_repo: 'Leo11-strive/slides'
          destination_branch: 'main'
          destination_folder: '.'
          user_email: 'leobestli61@gmail.com'
          user_name: 'Leo11-strive'
          commit_message: 'chore: ensure GitHub Pages serves _assets (.nojekyll)'
